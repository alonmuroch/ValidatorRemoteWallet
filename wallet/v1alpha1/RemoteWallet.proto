syntax = "proto3";

package remotewallet.v1alpha1;

import "google/api/annotations.proto";

option csharp_namespace = "Ethereum.Wallet.v1alpha1";
option go_package = "wallet/v1alpha1;remotewallet";
option java_multiple_files = true;
option java_outer_classname = "RemoteWalletProto";
option java_package = "github.com.alonmuroch.remoetwallet.v1alpha1";
option php_namespace = "Ethereum\\Wallet\\v1alpha1";


// Remote wallet service for Prysm's validator client.
service RemoteWallet {
    rpc FetchValidatingKeys (FetchValidatingKeysRequest) returns (FetchValidatingKeysResponse) {
        option (google.api.http) = {
            get: "/wallet/v1alpha1/keys/all"
        };
    }

    rpc Sign (SignRequest) returns (SignResponse) {
        option (google.api.http) = {
            get: "/wallet/v1alpha1/keys/sign"
        };
    }
}

message FetchValidatingKeysResponse {
    repeated bytes public_keys = 1;
}

message FetchValidatingKeysRequest {
}

message SignResponse {
    bytes sig = 1;
    SignResponseStatus status = 2;
}

message SignRequest {
    bytes public_key = 1;
    bytes root = 2;
    uint64 domain = 3;
}

enum SignResponseStatus {
    SIGNED = 0;
    UNKNOWN_PUB_KEY = 1;
    ALREADY_SIGNED = 2;
}