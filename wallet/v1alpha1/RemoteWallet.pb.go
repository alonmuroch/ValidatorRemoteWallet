// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet/v1alpha1/RemoteWallet.proto

package remotewallet

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignResponseStatus int32

const (
	SignResponseStatus_SIGNED          SignResponseStatus = 0
	SignResponseStatus_UNKNOWN_PUB_KEY SignResponseStatus = 1
	SignResponseStatus_ALREADY_SIGNED  SignResponseStatus = 2
)

var SignResponseStatus_name = map[int32]string{
	0: "SIGNED",
	1: "UNKNOWN_PUB_KEY",
	2: "ALREADY_SIGNED",
}

var SignResponseStatus_value = map[string]int32{
	"SIGNED":          0,
	"UNKNOWN_PUB_KEY": 1,
	"ALREADY_SIGNED":  2,
}

func (x SignResponseStatus) String() string {
	return proto.EnumName(SignResponseStatus_name, int32(x))
}

func (SignResponseStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_43296aad5947550b, []int{0}
}

type FetchValidatingKeysResponse struct {
	PublicKeys           [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchValidatingKeysResponse) Reset()         { *m = FetchValidatingKeysResponse{} }
func (m *FetchValidatingKeysResponse) String() string { return proto.CompactTextString(m) }
func (*FetchValidatingKeysResponse) ProtoMessage()    {}
func (*FetchValidatingKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_43296aad5947550b, []int{0}
}

func (m *FetchValidatingKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchValidatingKeysResponse.Unmarshal(m, b)
}
func (m *FetchValidatingKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchValidatingKeysResponse.Marshal(b, m, deterministic)
}
func (m *FetchValidatingKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchValidatingKeysResponse.Merge(m, src)
}
func (m *FetchValidatingKeysResponse) XXX_Size() int {
	return xxx_messageInfo_FetchValidatingKeysResponse.Size(m)
}
func (m *FetchValidatingKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchValidatingKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchValidatingKeysResponse proto.InternalMessageInfo

func (m *FetchValidatingKeysResponse) GetPublicKeys() [][]byte {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

type FetchValidatingKeysRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchValidatingKeysRequest) Reset()         { *m = FetchValidatingKeysRequest{} }
func (m *FetchValidatingKeysRequest) String() string { return proto.CompactTextString(m) }
func (*FetchValidatingKeysRequest) ProtoMessage()    {}
func (*FetchValidatingKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_43296aad5947550b, []int{1}
}

func (m *FetchValidatingKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchValidatingKeysRequest.Unmarshal(m, b)
}
func (m *FetchValidatingKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchValidatingKeysRequest.Marshal(b, m, deterministic)
}
func (m *FetchValidatingKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchValidatingKeysRequest.Merge(m, src)
}
func (m *FetchValidatingKeysRequest) XXX_Size() int {
	return xxx_messageInfo_FetchValidatingKeysRequest.Size(m)
}
func (m *FetchValidatingKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchValidatingKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchValidatingKeysRequest proto.InternalMessageInfo

type SignResponse struct {
	Sig                  []byte             `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	Status               SignResponseStatus `protobuf:"varint,2,opt,name=status,proto3,enum=remotewallet.v1alpha1.SignResponseStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SignResponse) Reset()         { *m = SignResponse{} }
func (m *SignResponse) String() string { return proto.CompactTextString(m) }
func (*SignResponse) ProtoMessage()    {}
func (*SignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_43296aad5947550b, []int{2}
}

func (m *SignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignResponse.Unmarshal(m, b)
}
func (m *SignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignResponse.Marshal(b, m, deterministic)
}
func (m *SignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignResponse.Merge(m, src)
}
func (m *SignResponse) XXX_Size() int {
	return xxx_messageInfo_SignResponse.Size(m)
}
func (m *SignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignResponse proto.InternalMessageInfo

func (m *SignResponse) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *SignResponse) GetStatus() SignResponseStatus {
	if m != nil {
		return m.Status
	}
	return SignResponseStatus_SIGNED
}

type SignRequest struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Root                 []byte   `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	Domain               string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignRequest) Reset()         { *m = SignRequest{} }
func (m *SignRequest) String() string { return proto.CompactTextString(m) }
func (*SignRequest) ProtoMessage()    {}
func (*SignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_43296aad5947550b, []int{3}
}

func (m *SignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignRequest.Unmarshal(m, b)
}
func (m *SignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignRequest.Marshal(b, m, deterministic)
}
func (m *SignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignRequest.Merge(m, src)
}
func (m *SignRequest) XXX_Size() int {
	return xxx_messageInfo_SignRequest.Size(m)
}
func (m *SignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignRequest proto.InternalMessageInfo

func (m *SignRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *SignRequest) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *SignRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func init() {
	proto.RegisterEnum("remotewallet.v1alpha1.SignResponseStatus", SignResponseStatus_name, SignResponseStatus_value)
	proto.RegisterType((*FetchValidatingKeysResponse)(nil), "remotewallet.v1alpha1.FetchValidatingKeysResponse")
	proto.RegisterType((*FetchValidatingKeysRequest)(nil), "remotewallet.v1alpha1.FetchValidatingKeysRequest")
	proto.RegisterType((*SignResponse)(nil), "remotewallet.v1alpha1.SignResponse")
	proto.RegisterType((*SignRequest)(nil), "remotewallet.v1alpha1.SignRequest")
}

func init() {
	proto.RegisterFile("wallet/v1alpha1/RemoteWallet.proto", fileDescriptor_43296aad5947550b)
}

var fileDescriptor_43296aad5947550b = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xb1, 0x53, 0x45, 0xea, 0xd4, 0x2a, 0x61, 0x2a, 0x90, 0x49, 0x83, 0x08, 0xe6, 0x12,
	0x40, 0xb2, 0x95, 0x70, 0x44, 0x42, 0x4a, 0xd4, 0x80, 0xaa, 0xa0, 0x10, 0x39, 0x2a, 0xa1, 0xa8,
	0x52, 0xb4, 0x71, 0x57, 0xf6, 0x8a, 0xf5, 0xae, 0xf1, 0xae, 0x41, 0xbd, 0xf2, 0x0a, 0x48, 0x5c,
	0x39, 0x71, 0xe1, 0x51, 0xb8, 0xf2, 0x0a, 0x3c, 0x08, 0xf2, 0x3a, 0x6d, 0x43, 0x48, 0x11, 0xdc,
	0xd6, 0x33, 0xf3, 0x9f, 0xdf, 0x7c, 0x19, 0xbc, 0x0f, 0x84, 0x73, 0xaa, 0x83, 0xf7, 0x5d, 0xc2,
	0xb3, 0x84, 0x74, 0x83, 0x90, 0xa6, 0x52, 0xd3, 0x99, 0xb1, 0xfa, 0x59, 0x2e, 0xb5, 0xc4, 0x9b,
	0xb9, 0xb1, 0x55, 0x91, 0xfe, 0x79, 0x64, 0xb3, 0x15, 0x4b, 0x19, 0x73, 0x1a, 0x90, 0x8c, 0x05,
	0x44, 0x08, 0xa9, 0x89, 0x66, 0x52, 0xa8, 0x4a, 0xe4, 0x3d, 0x85, 0xfd, 0x67, 0x54, 0x47, 0xc9,
	0x2b, 0xc2, 0xd9, 0x29, 0xd1, 0x4c, 0xc4, 0x23, 0x7a, 0xa6, 0x42, 0xaa, 0x32, 0x29, 0x14, 0xc5,
	0xbb, 0xb0, 0x93, 0x15, 0x0b, 0xce, 0xa2, 0xf9, 0x5b, 0x7a, 0xa6, 0x5c, 0xab, 0x5d, 0xeb, 0x38,
	0x21, 0x54, 0xa6, 0x32, 0xd0, 0x6b, 0x41, 0x73, 0xa3, 0xfe, 0x5d, 0x41, 0x95, 0xf6, 0x22, 0x70,
	0xa6, 0x2c, 0x16, 0x17, 0xe9, 0x1a, 0x50, 0x53, 0x2c, 0x76, 0xad, 0xb6, 0xd5, 0x71, 0xc2, 0xf2,
	0x89, 0x7d, 0xa8, 0x2b, 0x4d, 0x74, 0xa1, 0x5c, 0xbb, 0x6d, 0x75, 0x76, 0x7b, 0x0f, 0xfc, 0x8d,
	0x5d, 0xf8, 0xab, 0x69, 0xa6, 0x46, 0x10, 0x2e, 0x85, 0xde, 0x6b, 0xd8, 0xa9, 0xbc, 0x86, 0x89,
	0x77, 0x00, 0x2e, 0x4b, 0x5e, 0xa2, 0xb6, 0x2f, 0x2a, 0x46, 0x84, 0xad, 0x5c, 0x4a, 0x6d, 0x70,
	0x4e, 0x68, 0xde, 0x78, 0x0b, 0xea, 0xa7, 0x32, 0x25, 0x4c, 0xb8, 0xb5, 0xb6, 0xd5, 0xd9, 0x0e,
	0x97, 0x5f, 0x0f, 0x0f, 0x01, 0xff, 0xe4, 0x22, 0x40, 0x7d, 0x7a, 0xf8, 0x7c, 0x3c, 0x3c, 0x68,
	0x5c, 0xc3, 0x3d, 0xb8, 0x7e, 0x34, 0x1e, 0x8d, 0x5f, 0xce, 0xc6, 0xf3, 0xc9, 0xd1, 0x60, 0x3e,
	0x1a, 0x1e, 0x37, 0x2c, 0x44, 0xd8, 0xed, 0xbf, 0x08, 0x87, 0xfd, 0x83, 0xe3, 0xf9, 0x32, 0xd0,
	0xee, 0x7d, 0xb5, 0xc1, 0x59, 0xdd, 0x19, 0x7e, 0xb1, 0x60, 0x6f, 0xc3, 0xe4, 0xb0, 0x7b, 0xc5,
	0x00, 0xae, 0x9e, 0x72, 0xb3, 0xf7, 0x3f, 0x92, 0xaa, 0x15, 0xef, 0xde, 0xc7, 0x1f, 0x3f, 0x3f,
	0xd9, 0xfb, 0x78, 0x3b, 0x58, 0xbf, 0xac, 0x72, 0xd1, 0x01, 0xe1, 0x1c, 0x15, 0x6c, 0x95, 0xdd,
	0xa3, 0xf7, 0xd7, 0x95, 0x54, 0x25, 0xdc, 0xff, 0x87, 0xb5, 0x79, 0x9e, 0x61, 0xb6, 0xb0, 0xb9,
	0x99, 0xa9, 0x58, 0x2c, 0x06, 0x9f, 0x2d, 0x78, 0x14, 0x33, 0x9d, 0x14, 0x0b, 0x3f, 0x92, 0xa9,
	0x4f, 0xb8, 0x14, 0x69, 0x91, 0xcb, 0x28, 0x31, 0x00, 0xaa, 0xd7, 0x00, 0x83, 0x1b, 0xab, 0x43,
	0x9d, 0x94, 0x27, 0x3d, 0xb1, 0xde, 0xb4, 0xd6, 0xf2, 0x3f, 0x59, 0x2d, 0xee, 0x9b, 0xed, 0x0e,
	0x75, 0x42, 0x73, 0x5a, 0xa4, 0xfe, 0xec, 0xf7, 0x6c, 0xdf, 0x2f, 0x5d, 0x27, 0x95, 0xeb, 0xe4,
	0xdc, 0xb5, 0xa8, 0x9b, 0xff, 0xe5, 0xf1, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0xdd, 0x7b,
	0xd3, 0x8a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteWalletClient is the client API for RemoteWallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteWalletClient interface {
	FetchValidatingKeys(ctx context.Context, in *FetchValidatingKeysRequest, opts ...grpc.CallOption) (*FetchValidatingKeysResponse, error)
	Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignResponse, error)
}

type remoteWalletClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteWalletClient(cc grpc.ClientConnInterface) RemoteWalletClient {
	return &remoteWalletClient{cc}
}

func (c *remoteWalletClient) FetchValidatingKeys(ctx context.Context, in *FetchValidatingKeysRequest, opts ...grpc.CallOption) (*FetchValidatingKeysResponse, error) {
	out := new(FetchValidatingKeysResponse)
	err := c.cc.Invoke(ctx, "/remotewallet.v1alpha1.RemoteWallet/FetchValidatingKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteWalletClient) Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignResponse, error) {
	out := new(SignResponse)
	err := c.cc.Invoke(ctx, "/remotewallet.v1alpha1.RemoteWallet/Sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteWalletServer is the server API for RemoteWallet service.
type RemoteWalletServer interface {
	FetchValidatingKeys(context.Context, *FetchValidatingKeysRequest) (*FetchValidatingKeysResponse, error)
	Sign(context.Context, *SignRequest) (*SignResponse, error)
}

// UnimplementedRemoteWalletServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteWalletServer struct {
}

func (*UnimplementedRemoteWalletServer) FetchValidatingKeys(ctx context.Context, req *FetchValidatingKeysRequest) (*FetchValidatingKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchValidatingKeys not implemented")
}
func (*UnimplementedRemoteWalletServer) Sign(ctx context.Context, req *SignRequest) (*SignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sign not implemented")
}

func RegisterRemoteWalletServer(s *grpc.Server, srv RemoteWalletServer) {
	s.RegisterService(&_RemoteWallet_serviceDesc, srv)
}

func _RemoteWallet_FetchValidatingKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchValidatingKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteWalletServer).FetchValidatingKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotewallet.v1alpha1.RemoteWallet/FetchValidatingKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteWalletServer).FetchValidatingKeys(ctx, req.(*FetchValidatingKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteWallet_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteWalletServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotewallet.v1alpha1.RemoteWallet/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteWalletServer).Sign(ctx, req.(*SignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteWallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remotewallet.v1alpha1.RemoteWallet",
	HandlerType: (*RemoteWalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchValidatingKeys",
			Handler:    _RemoteWallet_FetchValidatingKeys_Handler,
		},
		{
			MethodName: "Sign",
			Handler:    _RemoteWallet_Sign_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wallet/v1alpha1/RemoteWallet.proto",
}
